if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
install.packages("htmltools')
install.packages("htmltools")
library(htmltools)
install.packages("htmltools")
install.packages("fastmap")
# install.packages("htmltools")
library(htmltools)
install.packages("htmltools")
xcode-select --install
# install.packages("htmltools")
library(htmltools)
# install.packages("htmltools")
library(r-htmltools)
# install.packages("htmltools")
# library(htmltools)
source("https://bioconductor.org/biocLite.R")
install.packages("BiocManager")
library(BiocManager)
library(BiocManager)
BiocManager::install("DESeq2")
library(readr)
gene_data <- read_csv('Breast_GSE45827.csv')
head(gene_data)
??DESeq2
gene_data <- t(gene_data)
head(gene_data)
gene_data <- as.data.frame(t(gene_data))
head(gene_data)
gene_data <- as.data.frame(t(gene_data))
head(gene_data)
columns(gene_data)
colnames(gene_data)
colnames(gene_data) <- gene_data[2,]
gene_data
gene_data <- as.data.frame(t(gene_data))
head(gene_data)
library(dplyr)
gene_data %>%
mutate(type = case_when(
type == 'normal' ~ 'healthy',
TRUE ~ 'cancer'
)
)
gene_data
library(dplyr)
gene_data %>%
mutate(binary_type = case_when(
type == 'normal' ~ 'healthy',
TRUE ~ 'cancer'
)
)
gene_data
library(dplyr)
gene_data %>%
mutate(type = case_when(
type == 'normal' ~ 'healthy',
TRUE ~ 'cancer'
)
)
gene_data
library(dplyr)
binary_class_data <- gene_data %>%
mutate(type = case_when(
type == 'normal' ~ 'healthy',
TRUE ~ 'cancer'
)
)
binary_class_data
binary_class_data <- gene_data %>%
mutate(type = case_when(
type == 'normal' ~ 'healthy',
TRUE ~ 'cancer'
)
)
binary_class_data
binary_class_data <- as.data.frame(t(binary_class_data))
head(binary_class_data)
colnames(binary_class_data) <- binary_class_data[2,]
binary_class_data <- binary_class_data[-c(1,2),]
binary_class_data
binary_class_data <- gene_data %>%
mutate(type = case_when(
type == 'normal' ~ 'healthy',
TRUE ~ 'cancer'
)
)
binary_class_data
binary_class_data <- as.data.frame(t(binary_class_data))
head(binary_class_data)
colnames(binary_class_data) <- binary_class_data[1,]
coldata <- binary_class_data[c(1,2),]
binary_class_data <- binary_class_data[-c(1,2),]
binary_class_data
coldata
binary_class_data <- gene_data %>%
mutate(type = case_when(
type == 'normal' ~ 'healthy',
TRUE ~ 'cancer'
)
)
binary_class_data
binary_class_data <- as.data.frame(t(binary_class_data))
head(binary_class_data)
colnames(binary_class_data) <- binary_class_data[1,]
coldata <- as.data.frame(t(binary_class_data[c(2),]))
binary_class_data <- binary_class_data[-c(1,2),]
binary_class_data
coldata
# library(BiocManager)
# BiocManager::install("DESeq2")
library(dplyr)
library(readr)
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData = binary_class_data,
colData = coldata,
design = ~ type())
has.neg <- apply(binary_class_data, 1, function(row) any(row < 0))
which(has.neg)
temp <- binary_class_data[1,]
temp
sum(temp < 0)
temp < 0
typeof(temp)
typeof(temp[1])
typeof(temp[1,])
typeof(temp[1,1])
class(temp)
class(temp[1,2])
type.convert(temp)
temp = type.convert(temp)
class(temp)
class(temp[1,2])
type.convert(binary_class_data)
converted_binary <- type.convert(binary_class_data)
converted_binary
has.neg <- apply(binary_class_data, 1, function(row) any(row < 0))
has.neg <- apply(binary_class_data, 1, function(row) any(row < 0))
which(has.neg)
has.neg <- apply(converted_binary 1, function(row) any(row < 0))
has.neg <- apply(converted_binary, 1, function(row) any(row < 0))
which(has.neg)
dds <- DESeqDataSetFromMatrix(countData = binary_class_data,
colData = coldata,
design = ~ type())
dds <- DESeqDataSetFromMatrix(countData = converted_binary,
colData = coldata,
design = ~ type)
setwd("~/Documents/GitHub/Breast-Cancer-Gene-Regulatory-Network-and-Risk-Prediction")
read_csv('GSE113863_expression_raw_counts.csv')
BiocManager::install("affy")
library(affy)
setwd("~/Documents/GitHub/Breast-Cancer-Gene-Regulatory-Network-and-Risk-Prediction/GSE45827_RAW")
data = ReadAffy()
data
library(affy)
gene_raw_data <- ReadAffy()
setwd("~/Documents/GitHub/Breast-Cancer-Gene-Regulatory-Network-and-Risk-Prediction/GSE45827_RAW")
library(affy)
gene_raw_data <- ReadAffy()
getwd
getwd()
library(affy)
gene_raw_data <- ReadAffy("/Users/alex/Documents/GitHub/Breast-Cancer-Gene-Regulatory-Network-and-Risk-Prediction/GSE45827_RAW")
library(affy)
gene_raw_data <- ReadAffy("/Users/alex/Documents/GitHub/Breast-Cancer-Gene-Regulatory-Network-and-Risk-Prediction/GSE45827_RAW/")
library(affy)
gene_raw_data <- ReadAffy(celfile.path = "/Users/alex/Documents/GitHub/Breast-Cancer-Gene-Regulatory-Network-and-Risk-Prediction/GSE45827_RAW/")
gene_raw_data.assayData
geneNames(gene_raw_data)
a <- assayData(gene_raw_data)
a
View(a)
a[1]
View(a)
a[exprs]
"exprs"
a.exprs
getenv(a)
a$exprs
assay_data <- assayData(gene_raw_data)$exprs
assay_data <- as.data.frame(assayData(gene_raw_data)$expr)
View(assay_data)
assay_data <- assayData(gene_raw_data)$expr
assay_data <- assayData(gene_raw_data)$exprs
View(assay_data)
assay_data[1,1]
pheno_data <- phenoData(gene_raw_data)
View(pheno_data)
assay_data <- assayData(gene_raw_data)$exprs
pheno_data <- phenoData(gene_raw_data)
feature_data <- featureData(gene_raw_data)
View(feature_data)
feature_data$data
rownames(feature_data$data)
feature_data@data
gene_raw_data
sampleNames(gene_raw_data)
image(gene_raw_data)
